services:
#    my_meloman.example:
#        class: myMelomanBundle\Example
#        arguments: ["@service_id", "plain_value", "%parameter%"]

#Use cases
    app.application.usecases.user.create:
      class: myDomain\UseCases\User\CreateUserUseCase
      arguments:
        userrepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'

    app.application.usecases.login.login:
      class: myDomain\UseCases\Login\LoginUseCase
      arguments:
        createUser: '@app.application.usecases.user.create'
        userrepository: '@app.repository.user'
        userProfilerepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'
        google_client_id: %google_client_id%
        google_secret_id: %google_secret_id%
        google_redirect_uri: %google_redirect_uri%
        google_email_scope: %google_email_scope%
        google_profile_scope: %google_profile_scope%

    app.application.usecases.edit.userprofile.show:
      class: myDomain\UseCases\UserProfile\ShowEditUserProfileUseCase
      arguments:
        userrepository: '@app.repository.user'

    app.application.usecases.page.userprofile.show:
      class: myDomain\UseCases\UserProfile\ShowProfilePageUseCase
      arguments:
        userrepository: '@app.repository.user'
        publicationrepository: '@app.repository.publication'

    app.application.usescases.user.update:
      class: myDomain\UseCases\User\UpdateUserUseCase
      arguments:
        userrepository: '@app.repository.user'
        musicalTasteRepo: '@app.repository.musicaltaste'
        entityManager: '@doctrine.orm.entity_manager'

    app.application.usecases.userprofile.get.musical.tastes:
        class: myDomain\UseCases\UserProfile\GetMusicalTastes

    app.application.usecases.get.checked.tastes:
        class: myDomain\UseCases\UserProfile\GetCheckedTastes
        arguments:
          getTastes: '@app.application.usecases.userprofile.get.musical.tastes'

    app.application.usescases.user.get:
      class: myDomain\UseCases\User\GetUsers
      arguments:
        userrepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'
        paginator: '@knp_paginator'

    app.application.usescases.user.search:
      class: myDomain\UseCases\User\SearchUserUseCase
      arguments:
        userrepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'
        paginator: '@knp_paginator'

    app.application.usescases.publication.create:
      class: myDomain\UseCases\Publication\CreatePublicationUseCase
      arguments:
        publicationrepository: '@app.repository.publication'
        userrepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'

    app.application.usescases.publication.delete:
      class: myDomain\UseCases\Publication\DeletePublicationUseCase
      arguments:
        publicationrepository: '@app.repository.publication'
        entityManager: '@doctrine.orm.entity_manager'

    app.application.usescases.publication.like:
      class: myDomain\UseCases\Like\LikePublicationUseCase
      arguments:
        publicationrepository: '@app.repository.publication'
        userrepository: '@app.repository.user'
        likerepository: '@app.repository.likes'
        entityManager: '@doctrine.orm.entity_manager'

    app.application.usescases.publication.dislike:
      class: myDomain\UseCases\Like\DislikePublicationUseCase
      arguments:
        publicationrepository: '@app.repository.publication'
        userrepository: '@app.repository.user'
        likerepository: '@app.repository.likes'
        entityManager: '@doctrine.orm.entity_manager'

    app.application.usecases.publication.get:
      class: myDomain\UseCases\Publication\GetPublicationsUseCase
      arguments:
        publicationrepository: '@app.repository.publication'
        userrepository: '@app.repository.user'
        followingRepository: '@app.repository.following'
        entityManager: '@doctrine.orm.entity_manager'
        paginator: '@knp_paginator'

    app.application.usecases.publication.specific.user.get:
      class: myDomain\UseCases\Publication\GetSpecificUserPublications
      arguments:
        publicationrepository: '@app.repository.publication'
        userrepository: '@app.repository.user'

    app.application.usecases.follow.create:
      class: myDomain\UseCases\Follow\CreateFollowUseCase
      arguments:
        userRepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'
        followingRepository: '@app.repository.following'

    app.application.usecases.follow.delete:
      class: myDomain\UseCases\Follow\DeleteFollowUseCase
      arguments:
        userRepository: '@app.repository.user'
        entityManager: '@doctrine.orm.entity_manager'
        followingRepository: '@app.repository.following'

    app.application.usecases.get.users.following:
      class: myDomain\UseCases\Follow\GetUsersFollowing
      arguments:
        followingRepository: '@app.repository.following'
        userRepository: '@app.repository.user'

    app.application.usecases.get.users.followers:
      class: myDomain\UseCases\Follow\GetUsersFollowers
      arguments:
        followingRepository: '@app.repository.following'
        userRepository: '@app.repository.user'

    app.application.usecases.get.user.likes:
      class: myDomain\UseCases\Like\GetUserLikes
      arguments:
        likesRepository: '@app.repository.likes'
        userRepository: '@app.repository.user'

    app.application.usecases.spotify:
      class: myDomain\UseCases\Spotify\SpotifyUseCase
      arguments:
        spotify_client_id: %spotify_client_id%
        spotify_secret_id: %spotify_secret_id%

    app.application.usecases.spotify.cache:
      class: myDomain\UseCases\Spotify\SpotifyCacheUseCase
      arguments:
        spotify: '@app.application.usecases.spotify'
        redis: '@snc_redis.default'

    app.application.usecases.notification.create:
      class: myDomain\UseCases\Notification\CreateNotificationUseCase
      arguments:
        userrepository: '@app.repository.user'
        notificationrepository: '@app.repository.notification'
        publicationRepository: '@app.repository.publication'
        entitymanager: '@doctrine.orm.entity_manager'

    app.application.usecases.notification.get:
      class: myDomain\UseCases\Notification\GetUserNotificationsUseCase
      arguments:
        notificationrepository: '@app.repository.notification'
        userrepository: '@app.repository.user'

    app.application.usecases.notification.mark_as_read:
      class: myDomain\UseCases\Notification\MarkNotificationsAsRead
      arguments:
        notificationrepository: '@app.repository.notification'
        entityManager: '@doctrine.orm.entity_manager'


#repositories
    app.repository.user:
      class: myMelomanBundle\Repository\UserRepository
      arguments:
        em: '@doctrine.orm.entity_manager'
        mapping: '@app.user.metadata'

    app.repository.musicaltaste:
      class: myMelomanBundle\Repository\MusicalTasteRepository
      arguments:
        em: '@doctrine.orm.entity_manager'
        mapping: '@app.musicaltaste.metadata'

    app.repository.publication:
      class: myMelomanBundle\Repository\PublicationRepository
      arguments:
        em: '@doctrine.orm.entity_manager'
        mapping: '@app.publication.metadata'

    app.repository.following:
      class: myMelomanBundle\Repository\FollowingRepository
      arguments:
        em: '@doctrine.orm.entity_manager'
        mapping: '@app.following.metadata'

    app.repository.likes:
      class: myMelomanBundle\Repository\LikesRepository
      arguments:
        em: '@doctrine.orm.entity_manager'
        mapping: '@app.likes.metadata'

    app.repository.notification:
      class: myMelomanBundle\Repository\NotificationRepository
      arguments:
        em: '@doctrine.orm.entity_manager'
        mapping: '@app.notification.metadata'

#Metadata
    app.user.metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ myDomain\Entity\User ]

    app.musicaltaste.metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ myDomain\Entity\MusicalTaste ]

    app.publication.metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ myDomain\Entity\Publication ]

    app.following.metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ myDomain\Entity\Following ]

    app.likes.metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ myDomain\Entity\Likes ]

    app.notification.metadata:
        class: Doctrine\ORM\Mapping\ClassMetadata
        factory_service: doctrine # this is an instance of Registry
        factory_method: getRepository
        arguments: [ myDomain\Entity\Notification ]

#Twig Filters
    app.following.twig_extension:
        class: myMelomanBundle\TwigFilters\FollowingFilter
        arguments:
          userRepository: '@app.repository.user'
          followingRepository: '@app.repository.following'
        tags:
            - { name: twig.extension }

    app.likes.twig_extension:
        class: myMelomanBundle\TwigFilters\LikesFilter
        arguments:
          userRepository: '@app.repository.user'
          followingRepository: '@app.repository.likes'
        tags:
            - { name: twig.extension }

    app.user.stadistics_extension:
        class: myMelomanBundle\TwigFilters\UserStadisticsFilter
        arguments:
          following: '@app.application.usecases.get.users.following'
          followers: '@app.application.usecases.get.users.followers'
          likes: '@app.application.usecases.get.user.likes'
        tags:
            - { name: twig.extension }

    app.user.getOwnPublications_extension:
        class: myMelomanBundle\TwigFilters\GetOwnPublicationsFilter
        arguments:
          publicationRepository: '@app.repository.publication'
        tags:
            - { name: twig.extension }

    app.publication.longtime_extension:
        class: myMelomanBundle\TwigFilters\LongTimeFilter
        tags:
            - { name: twig.extension }

    app.application.notification.get_user_extension:
        class: myMelomanBundle\TwigFilters\GetUserFilter
        arguments:
          userRepository: '@app.repository.user'
        tags:
            - { name: twig.extension }

    app.application.publication.count_publications_likes:
        class: myMelomanBundle\TwigFilters\CountPublicationLikesFilter
        arguments:
          likesRepository: '@app.repository.likes'
        tags:
            - { name: twig.extension }